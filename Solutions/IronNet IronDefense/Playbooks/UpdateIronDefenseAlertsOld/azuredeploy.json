{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "UpdateIronDefenseAlertsOld",
            "type":  "string"
        },
        "IronNetUrl":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for IronNetUrl"
            }
        },
        "Password":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Password"
            }
        },
        "TenantId":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for TenantId"
            }
        },
        "Username":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Username"
            }
        },
        "client_id":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for client_id"
            }
        },
        "client_secret":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for client_secret"
            }
        },
        "ResourceGroupId":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for ResourceGroupId"
            }
        },
        "ResourceGroup":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for ResourceGroup"
            }
        },
        "SubscriptionId":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for SubscriptionId"
            }
        },
        "workspace_name":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for workspace_name"
            }
        },
        "Pollingtime":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for Pollingtime"
            }
        },
        "PollingtimeFrequency":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for PollingtimeFrequency"
            }
        },
        "ShareCommentWithIronDome":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for ShareCommentWithIronDome"
            }
        },
        "LoginEndpoint":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for LoginEndpoint"
            }
        },
        "AzureManagementEndpoint":  {
            "type":  "string",
            "metadata":  {
                "description":  "Enter value for AzureManagementEndpoint"
            }
        }
    },
    "variables":  {
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        },
                        "IronNetUrl":  {
                            "defaultValue":  "[parameters('IronNetUrl')]",
                            "type":  "string"
                        },
                        "Password":  {
                            "defaultValue":  "[parameters('Password')]",
                            "type":  "string"
                        },
                        "TenantId":  {
                            "defaultValue":  "[parameters('TenantId')]",
                            "type":  "string"
                        },
                        "Username":  {
                            "defaultValue":  "[parameters('Username')]",
                            "type":  "string"
                        },
                        "client_id":  {
                            "defaultValue":  "[parameters('client_id')]",
                            "type":  "string"
                        },
                        "client_secret":  {
                            "defaultValue":  "[parameters('client_secret')]",
                            "type":  "string"
                        },
                        "ResourceGroupId":  {
                            "defaultValue":  "[parameters('ResourceGroupId')]",
                            "type":  "string"
                        },
                        "ResourceGroup":  {
                            "defaultValue":  "[parameters('ResourceGroup')]",
                            "type":  "string"
                        },
                        "SubscriptionId":  {
                            "defaultValue":  "[parameters('SubscriptionId')]",
                            "type":  "string"
                        },
                        "workspace_name":  {
                            "defaultValue":  "[parameters('workspace_name')]",
                            "type":  "string"
                        },
                        "Pollingtime":  {
                            "defaultValue":  "[parameters('Pollingtime')]",
                            "type":  "string"
                        },
                        "PollingtimeFrequency":  {
                            "defaultValue":  "[parameters('PollingtimeFrequency')]",
                            "type":  "string"
                        },
                        "ShareCommentWithIronDome":  {
                            "defaultValue":  "[parameters('ShareCommentWithIronDome')]",
                            "type":  "string"
                        },
                        "LoginEndpoint":  {
                            "defaultValue":  "[parameters('LoginEndpoint')]",
                            "type":  "string"
                        },
                        "AzureManagementEndpoint":  {
                            "defaultValue":  "[parameters('AzureManagementEndpoint')]",
                            "type":  "string"
                        }
                    },
                    "triggers":  {
                        "Generate_the_token_for_Azure_Sentinel_Incident":  {
                            "recurrence":  {
                                "frequency":  "@{parameters('PollingtimeFrequency')}",
                                "interval":  "@{int(parameters('Pollingtime'))}"
                            },
                            "evaluatedRecurrence":  {
                                "frequency":  "Minute",
                                "interval":  "15"
                            },
                            "type":  "Http",
                            "inputs":  {
                                "body":  "grant_type=client_credentials\u0026client_id=@{parameters('client_id')}\u0026client_secret=@{parameters('client_secret')}\u0026resource=https://@{parameters('AzureManagementEndpoint')}",
                                "headers":  {
                                    "Content-Type":  "application/x-www-form-urlencoded"
                                },
                                "method":  "POST",
                                "uri":  "https://@{parameters('LoginEndpoint')}/@{parameters('TenantId')}/oauth2/token"
                            }
                        }
                    },
                    "actions":  {
                        "Check_Result":  {
                            "actions":  {
                                "Incidents_were_modified":  {
                                    "type":  "Compose",
                                    "inputs":  "Following one or more incidents were modified between @{variables('Interval Frequency')} to @{utcNow()}: @{variables('Incidents')}"
                                }
                            },
                            "runAfter":  {
                                "Loop_through_All_the_Incident_Pages":  [
                                    "Succeeded"
                                ]
                            },
                            "else":  {
                                "actions":  {
                                    "No_Incidents_modified":  {
                                        "type":  "Compose",
                                        "inputs":  "No Incidents modified between @{variables('Interval Frequency')} to @{utcNow()}"
                                    }
                                }
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "equals":  [
                                            "@variables('Flag')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Initialize_Analyst_Expectation":  {
                            "runAfter":  {
                                "Initialize_Analyst_Severity":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Expectation",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Analyst_Severity":  {
                            "runAfter":  {
                                "Initialize_Status":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Severity",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Custom_Details":  {
                            "runAfter":  {
                                "Initialize_Analyst_Expectation":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Custom Details",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Has_IronDefense_Alert_ID":  {
                            "runAfter":  {
                                "Initialize_IronNet_Alert_Rating":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Has IronDefense Alert ID",
                                        "type":  "boolean",
                                        "value":  false
                                    }
                                ]
                            }
                        },
                        "Initialize_Incident_Alert_Index":  {
                            "runAfter":  {
                                "Initialize_IronDefense_Alert_ID":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Incident Alert Index",
                                        "type":  "integer",
                                        "value":  0
                                    }
                                ]
                            }
                        },
                        "Initialize_Incident_Next_Link":  {
                            "runAfter":  {
                                "Map_Interval_Frequency":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Next Link",
                                        "type":  "string",
                                        "value":  "https://@{parameters('AzureManagementEndpoint')}/@{parameters('ResourceGroupId')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents?api-version=2020-01-01\u0026$orderby=properties/lastModifiedTimeUtc desc\u0026$filter=(properties/lastModifiedTimeUtc ne properties/createdTimeUtc) and (properties/lastModifiedTimeUtc le @{utcNow()})  and (properties/lastModifiedTimeUtc gt @{variables('Interval Frequency')})"
                                    }
                                ]
                            }
                        },
                        "Initialize_Incident_variable":  {
                            "runAfter":  {
                                "Parse_Token":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Incidents",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Interval":  {
                            "runAfter":  {
                                "Initialize_Incident_Alert_Index":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Interval",
                                        "type":  "string",
                                        "value":  "-@{int(parameters('Pollingtime'))}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Interval_Frequency":  {
                            "runAfter":  {
                                "Initialize_Interval":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Interval Frequency",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_IronDefense_Alert_ID":  {
                            "runAfter":  {
                                "Initialize_Has_IronDefense_Alert_ID":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "IronDefense Alert ID",
                                        "type":  "string",
                                        "value":  "@{null}"
                                    }
                                ]
                            }
                        },
                        "Initialize_IronNet_Alert_Rating":  {
                            "runAfter":  {
                                "Initialize_IronNet_Alert_Status":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "IronNet Alert Rating",
                                        "type":  "string",
                                        "value":  "SEVERITY_NONE"
                                    }
                                ]
                            }
                        },
                        "Initialize_IronNet_Alert_Status":  {
                            "runAfter":  {
                                "Initialize_Latest_IronDefense_Alert_Time":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "IronNet Alert Status",
                                        "type":  "string",
                                        "value":  "STATUS_NONE"
                                    }
                                ]
                            }
                        },
                        "Initialize_Latest_IronDefense_Alert_Time":  {
                            "runAfter":  {
                                "Initialize_Ticks_since_incident_update":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Latest IronDefense Alert Time",
                                        "type":  "string",
                                        "value":  "1970-01-01T00:00:00Z"
                                    }
                                ]
                            }
                        },
                        "Initialize_Status":  {
                            "runAfter":  {
                                "Initialize_Success_Flag":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Status",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_Success_Flag":  {
                            "runAfter":  {
                                "Initialize_Incident_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Flag",
                                        "type":  "boolean",
                                        "value":  false
                                    }
                                ]
                            }
                        },
                        "Initialize_Ticks_since_incident_update":  {
                            "runAfter":  {
                                "Initialize_Ticks_since_last_IronDefense_Alert":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Ticks since incident update",
                                        "type":  "integer",
                                        "value":  0
                                    }
                                ]
                            }
                        },
                        "Initialize_Ticks_since_last_IronDefense_Alert":  {
                            "runAfter":  {
                                "Initialize_Custom_Details":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Ticks since last IronDefense Alert",
                                        "type":  "integer",
                                        "value":  0
                                    }
                                ]
                            }
                        },
                        "Loop_through_All_the_Incident_Pages":  {
                            "actions":  {
                                "Filter_out_non_IronDefense_Incidents":  {
                                    "runAfter":  {
                                        "Parse_Incident_details":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Query",
                                    "inputs":  {
                                        "from":  "@body('Parse_Incident_details')?['value']",
                                        "where":  "@startsWith(item()?['properties']?['description'], 'IronDefense')"
                                    }
                                },
                                "Get_All_Updated_Incident":  {
                                    "type":  "Http",
                                    "inputs":  {
                                        "headers":  {
                                            "Authorization":  "Bearer @{body('Parse_Token')?['access_token']}",
                                            "content-type":  "application/json"
                                        },
                                        "method":  "GET",
                                        "uri":  "@variables('Next Link')"
                                    }
                                },
                                "IronNet_Login_to_fetch_the_Token":  {
                                    "runAfter":  {
                                        "Filter_out_non_IronDefense_Incidents":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "authentication":  {
                                            "password":  "@parameters('Password')",
                                            "type":  "Basic",
                                            "username":  "@parameters('Username')"
                                        },
                                        "body":  "{}",
                                        "headers":  {
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "POST",
                                        "uri":  "@{parameters('IronNetUrl')}/IronApi/Login"
                                    }
                                },
                                "Loop_through_each_Incident":  {
                                    "foreach":  "@body('Filter_out_non_IronDefense_Incidents')",
                                    "actions":  {
                                        "Continue_if_the_Incident_wasn't_updated_by_an_Alert":  {
                                            "actions":  {
                                                "If_IronDefense_Alert_ID_is_found":  {
                                                    "actions":  {
                                                        "Check_for_Closed_Incident_and_Update_the_IronDefense_Analyst_Ratings":  {
                                                            "actions":  {
                                                                "Check_if_IronNet_alert_needs_to_be_rated":  {
                                                                    "actions":  {
                                                                        "Check_for_classification_comment":  {
                                                                            "actions":  {
                                                                                "Update_Incident_Rating_with_classification_comment":  {
                                                                                    "type":  "Http",
                                                                                    "inputs":  {
                                                                                        "body":  {
                                                                                            "alert_id":  "@variables('IronDefense Alert ID')",
                                                                                            "analyst_expectation":  "@variables('Expectation')",
                                                                                            "analyst_severity":  "@variables('Severity')",
                                                                                            "comment":  "@items('Loop_through_each_Incident')?['properties']?['classificationComment']",
                                                                                            "share_comment_with_irondome":  "@parameters('ShareCommentWithIronDome')"
                                                                                        },
                                                                                        "headers":  {
                                                                                            "Authorization":  "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                                                            "Content-Type":  "application/json"
                                                                                        },
                                                                                        "method":  "POST",
                                                                                        "uri":  "@{parameters('IronNetUrl')}/IronApi/RateAlert"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "else":  {
                                                                                "actions":  {
                                                                                    "Update_Incident_Rating_without_classification_comment":  {
                                                                                        "type":  "Http",
                                                                                        "inputs":  {
                                                                                            "body":  {
                                                                                                "alert_id":  "@variables('IronDefense Alert ID')",
                                                                                                "analyst_expectation":  "@variables('Expectation')",
                                                                                                "analyst_severity":  "@variables('Severity')",
                                                                                                "comment":  "Incident was classified as \"@{items('Loop_through_each_Incident')?['properties']?['classification']}: @{items('Loop_through_each_Incident')?['properties']?['classificationReason']}\" in Microsoft Sentinel.",
                                                                                                "share_comment_with_irondome":  "@parameters('ShareCommentWithIronDome')"
                                                                                            },
                                                                                            "headers":  {
                                                                                                "Authorization":  "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                                                                "Content-Type":  "application/json"
                                                                                            },
                                                                                            "method":  "POST",
                                                                                            "uri":  "@{parameters('IronNetUrl')}/IronApi/RateAlert"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression":  {
                                                                                "and":  [
                                                                                    {
                                                                                        "not":  {
                                                                                            "equals":  [
                                                                                                "@items('Loop_through_each_Incident')?['properties']?['classificationComment']",
                                                                                                1
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type":  "If"
                                                                        }
                                                                    },
                                                                    "runAfter":  {
                                                                        "Map_Azure_Sentinel_Expectation_to_IronNet_Analyst_Expectation_":  [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "expression":  {
                                                                        "and":  [
                                                                            {
                                                                                "not":  {
                                                                                    "equals":  [
                                                                                        "@variables('Severity')",
                                                                                        "@variables('IronNet Alert Rating')"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type":  "If"
                                                                },
                                                                "Map_Azure_Sentinel_Expectation_to_IronNet_Analyst_Expectation_":  {
                                                                    "runAfter":  {
                                                                        "Map_Azure_Sentinel_Severity_to_IronNet_Severity":  [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "cases":  {
                                                                        "Case":  {
                                                                            "case":  "Undetermined",
                                                                            "actions":  {
                                                                                "Map_Expectation_'Undetermined'":  {
                                                                                    "type":  "SetVariable",
                                                                                    "inputs":  {
                                                                                        "name":  "Expectation",
                                                                                        "value":  "EXP_UNKNOWN"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_2":  {
                                                                            "case":  "FalsePositive",
                                                                            "actions":  {
                                                                                "Map_Expectation_'FalsePositive'":  {
                                                                                    "type":  "SetVariable",
                                                                                    "inputs":  {
                                                                                        "name":  "Expectation",
                                                                                        "value":  "EXP_EXPECTED"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_3":  {
                                                                            "case":  "BenignPositive",
                                                                            "actions":  {
                                                                                "Map_Expectation_'BenignPositive'":  {
                                                                                    "type":  "SetVariable",
                                                                                    "inputs":  {
                                                                                        "name":  "Expectation",
                                                                                        "value":  "EXP_EXPECTED"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_4":  {
                                                                            "case":  "TruePositive",
                                                                            "actions":  {
                                                                                "Map_Expectation_'TruePositive'":  {
                                                                                    "type":  "SetVariable",
                                                                                    "inputs":  {
                                                                                        "name":  "Expectation",
                                                                                        "value":  "EXP_UNEXPECTED"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression":  "@items('Loop_through_each_Incident')?['properties']?['classification']",
                                                                    "type":  "Switch"
                                                                },
                                                                "Map_Azure_Sentinel_Severity_to_IronNet_Severity":  {
                                                                    "cases":  {
                                                                        "Case":  {
                                                                            "case":  "Undetermined",
                                                                            "actions":  {
                                                                                "Map_Severity_'Undetermined'":  {
                                                                                    "type":  "SetVariable",
                                                                                    "inputs":  {
                                                                                        "name":  "Severity",
                                                                                        "value":  "SEVERITY_UNDECIDED"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_2":  {
                                                                            "case":  "FalsePositive",
                                                                            "actions":  {
                                                                                "Map_Severity_'FalsePositive'":  {
                                                                                    "type":  "SetVariable",
                                                                                    "inputs":  {
                                                                                        "name":  "Severity",
                                                                                        "value":  "SEVERITY_BENIGN"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_3":  {
                                                                            "case":  "BenignPositive",
                                                                            "actions":  {
                                                                                "Map_Severity_'BenignPositive'":  {
                                                                                    "type":  "SetVariable",
                                                                                    "inputs":  {
                                                                                        "name":  "Severity",
                                                                                        "value":  "SEVERITY_MALICIOUS"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "Case_4":  {
                                                                            "case":  "TruePositive",
                                                                            "actions":  {
                                                                                "Condition":  {
                                                                                    "actions":  {
                                                                                        "Map_Severity_'TruePositive'_to_Malicious":  {
                                                                                            "type":  "SetVariable",
                                                                                            "inputs":  {
                                                                                                "name":  "Severity",
                                                                                                "value":  "SEVERITY_MALICIOUS"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "else":  {
                                                                                        "actions":  {
                                                                                            "Map_Severity_'TruePositive'_to_Suspicious":  {
                                                                                                "type":  "SetVariable",
                                                                                                "inputs":  {
                                                                                                    "name":  "Severity",
                                                                                                    "value":  "SEVERITY_SUSPICIOUS"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "expression":  {
                                                                                        "and":  [
                                                                                            {
                                                                                                "equals":  [
                                                                                                    "@items('Loop_through_each_Incident')?['properties']?['severity']",
                                                                                                    "High"
                                                                                                ]
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "type":  "If"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "default":  {
                                                                        "actions":  {
                                                                            "Map_Default_Severity":  {
                                                                                "type":  "SetVariable",
                                                                                "inputs":  {
                                                                                    "name":  "Severity",
                                                                                    "value":  "SEVERITY_UNDECIDED"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression":  "@items('Loop_through_each_Incident')?['properties']?['classification']",
                                                                    "type":  "Switch"
                                                                }
                                                            },
                                                            "runAfter":  {
                                                                "Check_for_Comments_and_Update":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "equals":  [
                                                                            "@items('Loop_through_each_Incident')?['properties']?['status']",
                                                                            "Closed"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        },
                                                        "Check_for_Comments_and_Update":  {
                                                            "actions":  {
                                                                "Loop_through_Comments":  {
                                                                    "foreach":  "@body('Parse_Incidents_comments')?['value']",
                                                                    "actions":  {
                                                                        "Check_if_comment_was_recent":  {
                                                                            "actions":  {
                                                                                "Comment_on_Alert":  {
                                                                                    "type":  "Http",
                                                                                    "inputs":  {
                                                                                        "body":  {
                                                                                            "alert_id":  "@variables('IronDefense Alert ID')",
                                                                                            "comment":  "(@{items('Loop_through_Comments')?['properties']?['author']?['name']})  @{items('Loop_through_Comments')?['properties']?['message']}",
                                                                                            "share_comment_with_irondome":  "@parameters('ShareCommentWithIronDome')"
                                                                                        },
                                                                                        "headers":  {
                                                                                            "Authorization":  "Bearer @{body('Parse_IronNet_Token')?['token']}"
                                                                                        },
                                                                                        "method":  "POST",
                                                                                        "uri":  "@{parameters('IronNetUrl')}/IronApi/CommentOnAlert"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "expression":  {
                                                                                "and":  [
                                                                                    {
                                                                                        "greaterOrEquals":  [
                                                                                            "@items('Loop_through_Comments')?['properties']?['createdTimeUtc']",
                                                                                            "@variables('Interval Frequency')"
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "not":  {
                                                                                            "startsWith":  [
                                                                                                "@items('Loop_through_Comments')?['properties']?['author']?['name']",
                                                                                                "Comment created from playbook"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "type":  "If"
                                                                        }
                                                                    },
                                                                    "type":  "Foreach"
                                                                }
                                                            },
                                                            "runAfter":  {
                                                                "Check_if_IronNet_Alert_status_needs_to_be_updated":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "greater":  [
                                                                            "@items('Loop_through_each_Incident')?['properties']?['additionalData']?['commentsCount']",
                                                                            0
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        },
                                                        "Check_if_IronNet_Alert_status_needs_to_be_updated":  {
                                                            "actions":  {
                                                                "Update_Incident_Status":  {
                                                                    "type":  "Http",
                                                                    "inputs":  {
                                                                        "body":  {
                                                                            "alert_id":  "@variables('IronDefense Alert ID')",
                                                                            "comment":  "The Incident has been modified in Microsoft Sentinel. [@{items('Loop_through_each_Incident')?['properties']?['incidentUrl']}]",
                                                                            "share_comment_with_irondome":  "@parameters('ShareCommentWithIronDome')",
                                                                            "status":  "@variables('Status')"
                                                                        },
                                                                        "headers":  {
                                                                            "Authorization":  "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                                            "Content-Type":  "application/json"
                                                                        },
                                                                        "method":  "POST",
                                                                        "uri":  "@{parameters('IronNetUrl')}/IronApi/SetAlertStatus"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter":  {
                                                                "Set_IronNet_Alert_Status_and_Rating":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "not":  {
                                                                            "equals":  [
                                                                                "@variables('Status')",
                                                                                "@variables('IronNet Alert Status')"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        },
                                                        "Get_Incident_latest_Comments":  {
                                                            "runAfter":  {
                                                                "Map_Azure_Sentinel_Status_to_IronNet_Status_":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "Http",
                                                            "inputs":  {
                                                                "headers":  {
                                                                    "Authorization":  "Bearer @{body('Parse_Token')?['access_token']}",
                                                                    "content-type":  "application/json"
                                                                },
                                                                "method":  "GET",
                                                                "uri":  "https://@{parameters('AzureManagementEndpoint')}/@{items('Loop_through_each_Incident')?['id']}/comments?api-version=2020-01-01"
                                                            }
                                                        },
                                                        "Get_IronNet_Alert":  {
                                                            "runAfter":  {
                                                                "Parse_Incidents_comments":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "Http",
                                                            "inputs":  {
                                                                "body":  {
                                                                    "alert_id":  [
                                                                        "@{variables('IronDefense Alert ID')}"
                                                                    ]
                                                                },
                                                                "headers":  {
                                                                    "Authorization":  "Bearer @{body('Parse_IronNet_Token')?['token']}",
                                                                    "Content-Type":  "application/json"
                                                                },
                                                                "method":  "POST",
                                                                "uri":  "@{parameters('IronNetUrl')}/IronApi/GetAlerts"
                                                            }
                                                        },
                                                        "Map_Azure_Sentinel_Status_to_IronNet_Status_":  {
                                                            "cases":  {
                                                                "Case":  {
                                                                    "case":  "New",
                                                                    "actions":  {
                                                                        "Map_Status_'New'_":  {
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "Status",
                                                                                "value":  "STATUS_AWAITING_REVIEW"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "Case_2":  {
                                                                    "case":  "Active",
                                                                    "actions":  {
                                                                        "Map_Status_'Active'":  {
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "Status",
                                                                                "value":  "STATUS_UNDER_REVIEW"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "Case_3":  {
                                                                    "case":  "Closed",
                                                                    "actions":  {
                                                                        "Map_Status_'Closed'":  {
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "Status",
                                                                                "value":  "STATUS_CLOSED"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "default":  {
                                                                "actions":  {
                                                                    "Map_Default_Status_'New'":  {
                                                                        "type":  "SetVariable",
                                                                        "inputs":  {
                                                                            "name":  "Status",
                                                                            "value":  "STATUS_AWAITING_REVIEW"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression":  "@items('Loop_through_each_Incident')?['properties']?['status']",
                                                            "type":  "Switch"
                                                        },
                                                        "Parse_Incidents_comments":  {
                                                            "runAfter":  {
                                                                "Get_Incident_latest_Comments":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "ParseJson",
                                                            "inputs":  {
                                                                "content":  "@body('Get_Incident_latest_Comments')",
                                                                "schema":  {
                                                                    "properties":  {
                                                                        "value":  {
                                                                            "items":  {
                                                                                "properties":  {
                                                                                    "id":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "name":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "properties":  {
                                                                                        "properties":  {
                                                                                            "author":  {
                                                                                                "properties":  {
                                                                                                    "name":  {
                                                                                                        "type":  "string"
                                                                                                    }
                                                                                                },
                                                                                                "type":  "object"
                                                                                            },
                                                                                            "createdTimeUtc":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "message":  {
                                                                                                "type":  "string"
                                                                                            }
                                                                                        },
                                                                                        "type":  "object"
                                                                                    },
                                                                                    "type":  {
                                                                                        "type":  "string"
                                                                                    }
                                                                                },
                                                                                "required":  [
                                                                                    "id",
                                                                                    "name",
                                                                                    "type",
                                                                                    "properties"
                                                                                ],
                                                                                "type":  "object"
                                                                            },
                                                                            "type":  "array"
                                                                        }
                                                                    },
                                                                    "type":  "object"
                                                                }
                                                            }
                                                        },
                                                        "Parse_IronNet_Alert":  {
                                                            "runAfter":  {
                                                                "Get_IronNet_Alert":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "ParseJson",
                                                            "inputs":  {
                                                                "content":  "@body('Get_IronNet_Alert')",
                                                                "schema":  {
                                                                    "properties":  {
                                                                        "alerts":  {
                                                                            "items":  {
                                                                                "properties":  {
                                                                                    "aggregation_criteria":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "analyst_expectation":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "analyst_severity":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "category":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "created":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "event_count":  {
                                                                                        "type":  "integer"
                                                                                    },
                                                                                    "first_event_created":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "id":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "last_event_created":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "raw_data_formats":  {
                                                                                        "items":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "type":  "array"
                                                                                    },
                                                                                    "severity":  {
                                                                                        "type":  "integer"
                                                                                    },
                                                                                    "status":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "sub_category":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "updated":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "vue_url":  {
                                                                                        "type":  "string"
                                                                                    }
                                                                                },
                                                                                "required":  [
                                                                                    "id",
                                                                                    "category",
                                                                                    "sub_category",
                                                                                    "severity",
                                                                                    "status",
                                                                                    "analyst_severity",
                                                                                    "analyst_expectation",
                                                                                    "created",
                                                                                    "updated",
                                                                                    "event_count",
                                                                                    "first_event_created",
                                                                                    "last_event_created",
                                                                                    "raw_data_formats",
                                                                                    "aggregation_criteria",
                                                                                    "vue_url"
                                                                                ],
                                                                                "type":  "object"
                                                                            },
                                                                            "type":  "array"
                                                                        },
                                                                        "constraint":  {
                                                                            "properties":  {
                                                                                "limit":  {
                                                                                    "type":  "integer"
                                                                                },
                                                                                "offset":  {
                                                                                    "type":  "integer"
                                                                                },
                                                                                "total":  {
                                                                                    "type":  "string"
                                                                                }
                                                                            },
                                                                            "type":  "object"
                                                                        }
                                                                    },
                                                                    "type":  "object"
                                                                }
                                                            }
                                                        },
                                                        "Set_IronNet_Alert_Status_and_Rating":  {
                                                            "foreach":  "@body('Parse_IronNet_Alert')?['alerts']",
                                                            "actions":  {
                                                                "Set_IronNet_Alert_Rating":  {
                                                                    "runAfter":  {
                                                                        "Set_IronNet_Alert_Status":  [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type":  "SetVariable",
                                                                    "inputs":  {
                                                                        "name":  "IronNet Alert Rating",
                                                                        "value":  "@items('Set_IronNet_Alert_Status_and_Rating')?['analyst_severity']"
                                                                    }
                                                                },
                                                                "Set_IronNet_Alert_Status":  {
                                                                    "type":  "SetVariable",
                                                                    "inputs":  {
                                                                        "name":  "IronNet Alert Status",
                                                                        "value":  "@items('Set_IronNet_Alert_Status_and_Rating')?['status']"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter":  {
                                                                "Parse_IronNet_Alert":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "Foreach"
                                                        }
                                                    },
                                                    "runAfter":  {
                                                        "Loop_through_Alerts_until_IronDefense_Alert_ID_is_found":  [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "not":  {
                                                                    "equals":  [
                                                                        "@variables('IronDefense Alert ID')",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "not":  {
                                                                    "equals":  [
                                                                        "@variables('IronDefense Alert ID')",
                                                                        ""
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                },
                                                "Loop_through_Alerts_until_IronDefense_Alert_ID_is_found":  {
                                                    "actions":  {
                                                        "Determine_if_Custom_Details_has_IronDefense_Alert_ID":  {
                                                            "runAfter":  {
                                                                "Fetch_Custom_Details_value_from_Incident":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "Has IronDefense Alert ID",
                                                                "value":  "@if(equals(indexOf(variables('Custom Details'), 'IDAlertUuidStr'),-1), false, true)"
                                                            }
                                                        },
                                                        "Fetch_Custom_Details_value_from_Incident":  {
                                                            "runAfter":  {
                                                                "Parse_Custom_Details":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "Custom Details",
                                                                "value":  "@body('Parse_Custom_Details')?['properties']?['additionalData']?['Custom Details']"
                                                            }
                                                        },
                                                        "Get_Entities":  {
                                                            "type":  "Http",
                                                            "inputs":  {
                                                                "headers":  {
                                                                    "Authorization":  "Bearer @{body('Parse_Token')?['access_token']}",
                                                                    "content-type":  "application/json"
                                                                },
                                                                "method":  "GET",
                                                                "uri":  "https://@{parameters('AzureManagementEndpoint')}/@{parameters('ResourceGroupId')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/Entities/@{body('Parse_System_Alert_Id')?['value'][variables('Incident Alert Index')]?['properties']['relatedResourceName']}?api-version=2019-01-01-preview"
                                                            }
                                                        },
                                                        "Has_IronDefense_Alert_ID":  {
                                                            "actions":  {
                                                                "Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details":  {
                                                                    "foreach":  "@body('Parse_IronDefense_Alert_Id')?['IDAlertUuidStr']",
                                                                    "actions":  {
                                                                        "Set_AlertID":  {
                                                                            "type":  "SetVariable",
                                                                            "inputs":  {
                                                                                "name":  "IronDefense Alert ID",
                                                                                "value":  "@{items('Fetch_Ironnet_Alert_Id_from_Incident_Custom_Details')}"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter":  {
                                                                        "Parse_IronDefense_Alert_Id":  [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type":  "Foreach"
                                                                },
                                                                "Parse_IronDefense_Alert_Id":  {
                                                                    "type":  "ParseJson",
                                                                    "inputs":  {
                                                                        "content":  "@variables('Custom Details')",
                                                                        "schema":  {
                                                                            "properties":  {
                                                                                "AlertCreatedTime":  {
                                                                                    "items":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "type":  "array"
                                                                                },
                                                                                "AnalystRating":  {
                                                                                    "items":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "type":  "array"
                                                                                },
                                                                                "IDAlertUuidStr":  {
                                                                                    "items":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "type":  "array"
                                                                                },
                                                                                "IronDefenseStatus":  {
                                                                                    "items":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "type":  "array"
                                                                                },
                                                                                "IronVueUrl":  {
                                                                                    "items":  {
                                                                                        "type":  "string"
                                                                                    },
                                                                                    "type":  "array"
                                                                                }
                                                                            },
                                                                            "type":  "object"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "runAfter":  {
                                                                "Determine_if_Custom_Details_has_IronDefense_Alert_ID":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression":  {
                                                                "and":  [
                                                                    {
                                                                        "equals":  [
                                                                            "@variables('Has IronDefense Alert ID')",
                                                                            true
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type":  "If"
                                                        },
                                                        "Increment_Incident_Alert_Index":  {
                                                            "runAfter":  {
                                                                "Has_IronDefense_Alert_ID":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "IncrementVariable",
                                                            "inputs":  {
                                                                "name":  "Incident Alert Index",
                                                                "value":  1
                                                            }
                                                        },
                                                        "Parse_Custom_Details":  {
                                                            "runAfter":  {
                                                                "Get_Entities":  [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type":  "ParseJson",
                                                            "inputs":  {
                                                                "content":  "@body('Get_Entities')",
                                                                "schema":  {
                                                                    "properties":  {
                                                                        "id":  {
                                                                            "type":  "string"
                                                                        },
                                                                        "kind":  {
                                                                            "type":  "string"
                                                                        },
                                                                        "name":  {
                                                                            "type":  "string"
                                                                        },
                                                                        "properties":  {
                                                                            "properties":  {
                                                                                "additionalData":  {
                                                                                    "properties":  {
                                                                                        "Analytic Rule Ids":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Analytic Rule Name":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Custom Details":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Data Sources":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Event Grouping":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "OriginalQuery":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "ProcessedBySentinel":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Query":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Query End Time UTC":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Query Period":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Query Start Time UTC":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Search Query Results Overall Count":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Trigger Operator":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "Trigger Threshold":  {
                                                                                            "type":  "string"
                                                                                        }
                                                                                    },
                                                                                    "type":  "object"
                                                                                },
                                                                                "alertDisplayName":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "alertType":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "confidenceLevel":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "endTimeUtc":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "friendlyName":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "processingEndTime":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "productComponentName":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "productName":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "providerAlertId":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "resourceIdentifiers":  {
                                                                                    "items":  {
                                                                                        "properties":  {
                                                                                            "type":  {
                                                                                                "type":  "string"
                                                                                            },
                                                                                            "workspaceId":  {
                                                                                                "type":  "string"
                                                                                            }
                                                                                        },
                                                                                        "required":  [
                                                                                            "type",
                                                                                            "workspaceId"
                                                                                        ],
                                                                                        "type":  "object"
                                                                                    },
                                                                                    "type":  "array"
                                                                                },
                                                                                "severity":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "startTimeUtc":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "status":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "systemAlertId":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "tactics":  {
                                                                                    "type":  "array"
                                                                                },
                                                                                "timeGenerated":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "vendorName":  {
                                                                                    "type":  "string"
                                                                                }
                                                                            },
                                                                            "type":  "object"
                                                                        },
                                                                        "type":  {
                                                                            "type":  "string"
                                                                        }
                                                                    },
                                                                    "type":  "object"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression":  "@not(equals(variables('IronDefense Alert ID'), null))",
                                                    "limit":  {
                                                        "count":  100,
                                                        "timeout":  "PT1H"
                                                    },
                                                    "type":  "Until"
                                                }
                                            },
                                            "runAfter":  {
                                                "Set_Ticks_since_incident_update":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression":  {
                                                "and":  [
                                                    {
                                                        "greater":  [
                                                            "@sub(variables('Ticks since incident update'), variables('Ticks since last IronDefense Alert'))",
                                                            10000000
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type":  "If"
                                        },
                                        "For_each_Incident_alert":  {
                                            "foreach":  "@body('Parse_Incident_alerts')?['value']",
                                            "actions":  {
                                                "Check_if_alert_is_latest":  {
                                                    "actions":  {
                                                        "Set_Latest_IronDefense_Alert_Time":  {
                                                            "type":  "SetVariable",
                                                            "inputs":  {
                                                                "name":  "Latest IronDefense Alert Time",
                                                                "value":  "@items('For_each_Incident_alert')?['properties']?['timeGenerated']"
                                                            }
                                                        }
                                                    },
                                                    "expression":  {
                                                        "and":  [
                                                            {
                                                                "greater":  [
                                                                    "@items('For_each_Incident_alert')?['properties']?['timeGenerated']",
                                                                    "@variables('Latest IronDefense Alert Time')"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type":  "If"
                                                }
                                            },
                                            "runAfter":  {
                                                "Parse_Incident_alerts":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "Foreach",
                                            "runtimeConfiguration":  {
                                                "concurrency":  {
                                                    "repetitions":  1
                                                }
                                            }
                                        },
                                        "Get_Incident_alerts":  {
                                            "runAfter":  {
                                                "Parse_System_Alert_Id":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "Http",
                                            "inputs":  {
                                                "headers":  {
                                                    "Authorization":  "Bearer @{body('Parse_Token')?['access_token']}"
                                                },
                                                "method":  "POST",
                                                "uri":  "https://@{parameters('AzureManagementEndpoint')}/@{parameters('ResourceGroupId')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents/@{items('Loop_through_each_Incident')?['name']}/alerts?api-version=2021-04-01"
                                            }
                                        },
                                        "Get_Incident_and_System_Alert_relations":  {
                                            "type":  "Http",
                                            "inputs":  {
                                                "headers":  {
                                                    "Authorization":  "Bearer @{body('Parse_Token')?['access_token']}",
                                                    "content-type":  "application/json"
                                                },
                                                "method":  "GET",
                                                "uri":  "https://@{parameters('AzureManagementEndpoint')}/@{parameters('ResourceGroupId')}/providers/Microsoft.OperationalInsights/workspaces/@{parameters('workspace_name')}/providers/Microsoft.SecurityInsights/incidents/@{items('Loop_through_each_Incident')?['name']}/relations?api-version=2019-01-01-preview"
                                            }
                                        },
                                        "Incidents_Updated":  {
                                            "runAfter":  {
                                                "Reset_Latest_IronDefense_Alert_Time":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "AppendToStringVariable",
                                            "inputs":  {
                                                "name":  "Incidents",
                                                "value":  "@{items('Loop_through_each_Incident')?['properties']?['incidentNumber']},"
                                            }
                                        },
                                        "Parse_Incident_alerts":  {
                                            "runAfter":  {
                                                "Get_Incident_alerts":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "ParseJson",
                                            "inputs":  {
                                                "content":  "@body('Get_Incident_alerts')",
                                                "schema":  {
                                                    "properties":  {
                                                        "value":  {
                                                            "items":  {
                                                                "properties":  {
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "kind":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "name":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "properties":  {
                                                                        "properties":  {
                                                                            "additionalData":  {
                                                                                "properties":  {
                                                                                    "AlertMessageEnqueueTime":  {
                                                                                        "type":  "string"
                                                                                    }
                                                                                },
                                                                                "type":  "object"
                                                                            },
                                                                            "alertDisplayName":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "alertType":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "confidenceLevel":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "description":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "endTimeUtc":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "friendlyName":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "processingEndTime":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "productComponentName":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "productName":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "providerAlertId":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "resourceIdentifiers":  {
                                                                                "items":  {
                                                                                    "properties":  {
                                                                                        "resourceGroup":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "subscriptionId":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "type":  {
                                                                                            "type":  "string"
                                                                                        },
                                                                                        "workspaceId":  {
                                                                                            "type":  "string"
                                                                                        }
                                                                                    },
                                                                                    "required":  [
                                                                                        "type",
                                                                                        "workspaceId",
                                                                                        "subscriptionId",
                                                                                        "resourceGroup"
                                                                                    ],
                                                                                    "type":  "object"
                                                                                },
                                                                                "type":  "array"
                                                                            },
                                                                            "severity":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "startTimeUtc":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "status":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "systemAlertId":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "tactics":  {
                                                                                "type":  "array"
                                                                            },
                                                                            "timeGenerated":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "vendorName":  {
                                                                                "type":  "string"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "type":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "required":  [
                                                                    "id",
                                                                    "name",
                                                                    "type",
                                                                    "kind",
                                                                    "properties"
                                                                ],
                                                                "type":  "object"
                                                            },
                                                            "type":  "array"
                                                        }
                                                    },
                                                    "type":  "object"
                                                }
                                            }
                                        },
                                        "Parse_System_Alert_Id":  {
                                            "runAfter":  {
                                                "Get_Incident_and_System_Alert_relations":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "ParseJson",
                                            "inputs":  {
                                                "content":  "@body('Get_Incident_and_System_Alert_relations')",
                                                "schema":  {
                                                    "properties":  {
                                                        "value":  {
                                                            "items":  {
                                                                "properties":  {
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "name":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "properties":  {
                                                                        "properties":  {
                                                                            "relatedResourceId":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "relatedResourceKind":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "relatedResourceName":  {
                                                                                "type":  "string"
                                                                            },
                                                                            "relatedResourceType":  {
                                                                                "type":  "string"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "type":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "required":  [
                                                                    "id",
                                                                    "name",
                                                                    "type",
                                                                    "properties"
                                                                ],
                                                                "type":  "object"
                                                            },
                                                            "type":  "array"
                                                        }
                                                    },
                                                    "type":  "object"
                                                }
                                            }
                                        },
                                        "Reset_Incident_Alert_Index_to_0":  {
                                            "runAfter":  {
                                                "Continue_if_the_Incident_wasn't_updated_by_an_Alert":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Incident Alert Index",
                                                "value":  0
                                            }
                                        },
                                        "Reset_IronDefense_Alert_ID_to_null":  {
                                            "runAfter":  {
                                                "Reset_Incident_Alert_Index_to_0":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "IronDefense Alert ID",
                                                "value":  "@{null}"
                                            }
                                        },
                                        "Reset_Latest_IronDefense_Alert_Time":  {
                                            "runAfter":  {
                                                "Reset_IronDefense_Alert_ID_to_null":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Latest IronDefense Alert Time",
                                                "value":  "1970-01-01T00:00:00Z"
                                            }
                                        },
                                        "Set_Flag_Succeeded":  {
                                            "runAfter":  {
                                                "Incidents_Updated":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Flag",
                                                "value":  true
                                            }
                                        },
                                        "Set_Ticks_since_incident_update":  {
                                            "runAfter":  {
                                                "Set_Ticks_since_last_IronDefense_Alert":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Ticks since incident update",
                                                "value":  "@ticks(items('Loop_through_each_Incident')?['properties']['lastModifiedTimeUtc'])"
                                            }
                                        },
                                        "Set_Ticks_since_last_IronDefense_Alert":  {
                                            "runAfter":  {
                                                "For_each_Incident_alert":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Ticks since last IronDefense Alert",
                                                "value":  "@ticks(variables('Latest IronDefense Alert Time'))"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_IronNet_Token":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach",
                                    "runtimeConfiguration":  {
                                        "concurrency":  {
                                            "repetitions":  1
                                        }
                                    }
                                },
                                "Parse_Incident_details":  {
                                    "runAfter":  {
                                        "Get_All_Updated_Incident":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Get_All_Updated_Incident')",
                                        "schema":  {
                                            "properties":  {
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "etag":  {
                                                                "type":  "string"
                                                            },
                                                            "id":  {
                                                                "type":  "string"
                                                            },
                                                            "name":  {
                                                                "type":  "string"
                                                            },
                                                            "properties":  {
                                                                "properties":  {
                                                                    "additionalData":  {
                                                                        "properties":  {
                                                                            "alertProductNames":  {
                                                                                "items":  {
                                                                                    "type":  "string"
                                                                                },
                                                                                "type":  "array"
                                                                            },
                                                                            "alertsCount":  {
                                                                                "type":  "integer"
                                                                            },
                                                                            "bookmarksCount":  {
                                                                                "type":  "integer"
                                                                            },
                                                                            "commentsCount":  {
                                                                                "type":  "integer"
                                                                            },
                                                                            "tactics":  {
                                                                                "type":  "array"
                                                                            }
                                                                        },
                                                                        "type":  "object"
                                                                    },
                                                                    "classification":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "classificationComment":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "classificationReason":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "createdTimeUtc":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "description":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "firstActivityTimeUtc":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "incidentNumber":  {
                                                                        "type":  "integer"
                                                                    },
                                                                    "incidentUrl":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "labels":  {
                                                                        "type":  "array"
                                                                    },
                                                                    "lastActivityTimeUtc":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "lastModifiedTimeUtc":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "owner":  {
                                                                        "type":  "object"
                                                                    },
                                                                    "relatedAnalyticRuleIds":  {
                                                                        "items":  {
                                                                            "type":  "string"
                                                                        },
                                                                        "type":  "array"
                                                                    },
                                                                    "severity":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "status":  {
                                                                        "type":  "string"
                                                                    },
                                                                    "title":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "type":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "id",
                                                            "name",
                                                            "etag",
                                                            "type",
                                                            "properties"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Parse_IronNet_Token":  {
                                    "runAfter":  {
                                        "IronNet_Login_to_fetch_the_Token":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('IronNet_Login_to_fetch_the_Token')",
                                        "schema":  {
                                            "properties":  {
                                                "token":  {
                                                    "type":  "string"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Set_Next_Link":  {
                                    "runAfter":  {
                                        "Loop_through_each_Incident":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "SetVariable",
                                    "inputs":  {
                                        "name":  "Next Link",
                                        "value":  "@body('Parse_Incident_details')?['nextLink']"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initialize_Incident_Next_Link":  [
                                    "Succeeded"
                                ]
                            },
                            "expression":  "@not(equals(variables('Next Link'), null))",
                            "limit":  {
                                "count":  60,
                                "timeout":  "PT1H"
                            },
                            "type":  "Until"
                        },
                        "Map_Interval_Frequency":  {
                            "runAfter":  {
                                "Initialize_Interval_Frequency":  [
                                    "Succeeded"
                                ]
                            },
                            "cases":  {
                                "Case":  {
                                    "case":  "Day",
                                    "actions":  {
                                        "Set_Day":  {
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Interval Frequency",
                                                "value":  "@{addDays(utcNow(),int(variables('Interval')))}"
                                            }
                                        }
                                    }
                                },
                                "Case_2":  {
                                    "case":  "Hour",
                                    "actions":  {
                                        "Set_Hour":  {
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Interval Frequency",
                                                "value":  "@{addHours(utcNow(),int(variables('Interval')))}"
                                            }
                                        }
                                    }
                                },
                                "Case_3":  {
                                    "case":  "Minute",
                                    "actions":  {
                                        "Set_Minutes":  {
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Interval Frequency",
                                                "value":  "@{addMinutes(utcNow(),int(variables('Interval')))}"
                                            }
                                        }
                                    }
                                },
                                "Case_4":  {
                                    "case":  "Second",
                                    "actions":  {
                                        "Set_Second":  {
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Interval Frequency",
                                                "value":  "@{addSeconds(utcNow(),int(variables('Interval')))}"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression":  "@parameters('PollingtimeFrequency')",
                            "type":  "Switch"
                        },
                        "Parse_Token":  {
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@triggerBody()",
                                "schema":  {
                                    "properties":  {
                                        "access_token":  {
                                            "type":  "string"
                                        },
                                        "expires_in":  {
                                            "type":  "string"
                                        },
                                        "expires_on":  {
                                            "type":  "string"
                                        },
                                        "ext_expires_in":  {
                                            "type":  "string"
                                        },
                                        "not_before":  {
                                            "type":  "string"
                                        },
                                        "resource":  {
                                            "type":  "string"
                                        },
                                        "token_type":  {
                                            "type":  "string"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        }
                    },
                    "outputs":  {
                        "checkInts":  {
                            "type":  "Bool",
                            "value":  true
                        }
                    }
                },
                "parameters":  {
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "hidden-SentinelTemplateName":  "UpdateIronDefenseAlertsOld",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
            ]
        }
    ]
}
